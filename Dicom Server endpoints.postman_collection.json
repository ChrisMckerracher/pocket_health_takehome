{
	"info": {
		"_postman_id": "8811d6f4-518a-452c-ab4b-0cdf8691e329",
		"name": "Dicom Server endpoints",
		"description": "This postman collection gives a very high level overview of the endpoints, with minimal documentation.\n\nI will give a high level overview on how to use the collection!\n\nCreate an environment with the following env vars:\n\n**server**: your server endpoint\n\n**patient_id**: choose a value representing a patient id\n\n**dcm_id**: this can be blank, and will get auto populated later\n\n**auth_token**: set this to blank and make its type private\n\nRun requests in the following order:\n\n1. Auth/Get Access Token -> This will populate an auth_token for your specified patient_id using a dev only endpoint\n    \n2. Dicom/Post dcm -> Go to form data and choose a valid dcm file to upload. The return value will populate the dcm_id env var\n    \n3. You can run Dicom/Get tag or Dicom/Get File here in any order",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1421699"
	},
	"item": [
		{
			"name": "Dicom",
			"item": [
				{
					"name": "Post dcm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"dcm_id\", pm.response.json());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/dicom; boundary=<calculated when request is sent>",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "body",
									"contentType": "application/dicom",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{server}}/patient/{{patient_id}}/dicom",
							"host": [
								"{{server}}"
							],
							"path": [
								"patient",
								"{{patient_id}}",
								"dicom"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get tag",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/patient/{{patient_id}}/dicom/{{dcm_id}}/tag/00080005",
							"host": [
								"{{server}}"
							],
							"path": [
								"patient",
								"{{patient_id}}",
								"dicom",
								"{{dcm_id}}",
								"tag",
								"00080005"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get File",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{auth_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "image/png",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/patient/{{patient_id}}/dicom/{{dcm_id}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"patient",
								"{{patient_id}}",
								"dicom",
								"{{dcm_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"auth_token\", pm.cookies.get(\"Access-Token\"));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/patient/{{patient_id}}/token",
							"host": [
								"{{server}}"
							],
							"path": [
								"patient",
								"{{patient_id}}",
								"token"
							]
						},
						"description": "Gets information about the authenticated user."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    },\n    \"operations\": [\n        {\n            \"name\": \"mock_usage\",\n            \"limit\": 1000000,\n            \"usage\": 110276,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"monitor_request_runs\",\n            \"limit\": 10000000,\n            \"usage\": 1141750,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"api_usage\",\n            \"limit\": 1000000,\n            \"usage\": 16240,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"custom_domains\",\n            \"limit\": 25,\n            \"usage\": 25,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"serverless_requests\",\n            \"limit\": 10000,\n            \"usage\": 0,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"integrations\",\n            \"limit\": 5000,\n            \"usage\": 1018,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"cloud_agent_requests\",\n            \"limit\": 1000000,\n            \"usage\": 1615,\n            \"overage\": 0\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/me",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}